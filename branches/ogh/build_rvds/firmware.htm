<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [C:\Users\Jeff\Desktop\skku_internship\tutorial2-dev\branches\ogh\build_rvds\firmware.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image C:\Users\Jeff\Desktop\skku_internship\tutorial2-dev\branches\ogh\build_rvds\firmware.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 591]: Last Updated: Fri Feb 03 07:35:33 2012
<BR><P>
<H3>Maximum Stack Usage =        172 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ata_flush_cache &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2199694]">disable_interrupt</a>
 <LI><a href="#[2199658]">enable_interrupt</a>
 <LI><a href="#[219970c]">reset_handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2198d34]">flush_smt_piece</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2198d34]">flush_smt_piece</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21964a8]">ata_not_supported</a>
 <LI><a href="#[219655c]">ata_nop</a>
 <LI><a href="#[21964e4]">ata_recalibrate</a>
 <LI><a href="#[2196598]">ata_read_native_max_address</a>
 <LI><a href="#[219682c]">ata_read_verify_sectors</a>
 <LI><a href="#[219682c]">ata_read_verify_sectors</a>
 <LI><a href="#[21967b4]">ata_seek</a>
 <LI><a href="#[2196430]">ata_execute_drive_diagnostics</a>
 <LI><a href="#[2196520]">ata_initialize_device_parameters</a>
 <LI><a href="#[2196688]">ata_standby_immediate</a>
 <LI><a href="#[2196610]">ata_idle_immediate</a>
 <LI><a href="#[21966c4]">ata_standby</a>
 <LI><a href="#[219664c]">ata_idle</a>
 <LI><a href="#[21968e0]">ata_check_power_mode</a>
 <LI><a href="#[21965d4]">ata_sleep</a>
 <LI><a href="#[2196778]">ata_set_multiple_mode</a>
 <LI><a href="#[2196688]">ata_standby_immediate</a>
 <LI><a href="#[2196610]">ata_idle_immediate</a>
 <LI><a href="#[21966c4]">ata_standby</a>
 <LI><a href="#[219664c]">ata_idle</a>
 <LI><a href="#[219673c]">ata_read_buffer</a>
 <LI><a href="#[21968e0]">ata_check_power_mode</a>
 <LI><a href="#[21965d4]">ata_sleep</a>
 <LI><a href="#[2196868]">ata_flush_cache</a>
 <LI><a href="#[2196700]">ata_write_buffer</a>
 <LI><a href="#[2196868]">ata_flush_cache</a>
 <LI><a href="#[2196d18]">ata_identify_device</a>
 <LI><a href="#[21967f0]">ata_set_features</a>
 <LI><a href="#[2196598]">ata_read_native_max_address</a>
 <LI><a href="#[219646c]">ata_srst</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2199694]"></a>disable_interrupt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, init.o(init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[21958b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sata_reset
</UL>

<P><STRONG><a name="[2199658]"></a>enable_interrupt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, init.o(init), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[21958b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sata_reset
</UL>

<P><STRONG><a name="[2191354]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[21977a4]"></a>flush_merge_buffer</STRONG> (ARM, 212 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
<LI><a href="#[2198c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_free_page
<LI><a href="#[2198c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_psn
</UL>
<BR>[Called By]<UL><LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
</UL>

<P><STRONG><a name="[2197768]"></a>ftl_flush</STRONG> (ARM, 60 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + Unknown Stack Size
<LI>Call Chain = ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21972f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_finish
<LI><a href="#[21977a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_merge_buffer
<LI><a href="#[2198b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logging_misc_meta
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>
<BR>[Called By]<UL><LI><a href="#[2196610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_idle_immediate
<LI><a href="#[219664c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_idle
<LI><a href="#[2196688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_standby_immediate
<LI><a href="#[21966c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_standby
<LI><a href="#[2196868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_flush_cache
<LI><a href="#[2198b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;format
</UL>

<P><STRONG><a name="[219772c]"></a>ftl_open</STRONG> (ARM, 560 bytes, Stack size 40 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = ftl_open &rArr; format &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
<LI><a href="#[2197330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clear_irq
<LI><a href="#[21973e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_write_dram_16
<LI><a href="#[219745c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_dram_16
<LI><a href="#[2197498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_dram
<LI><a href="#[2198b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;format
<LI><a href="#[2198c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_bad_block
<LI><a href="#[2198cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_meta_data
</UL>
<BR>[Called By]<UL><LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
</UL>

<P><STRONG><a name="[21976f0]"></a>ftl_read_sector</STRONG> (ARM, 232 bytes, Stack size 16 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = ftl_read_sector &rArr; get_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
<LI><a href="#[2197498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_dram
<LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
<LI><a href="#[2198bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_psn
</UL>
<BR>[Called By]<UL><LI><a href="#[21976b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
</UL>

<P><STRONG><a name="[21976b4]"></a>ftl_read</STRONG> (ARM, 228 bytes, Stack size 48 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = ftl_read &rArr; ftl_read_sector &rArr; get_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21976f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[219925c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[2197678]"></a>ftl_write_sector</STRONG> (ARM, 384 bytes, Stack size 32 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = ftl_write_sector &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
<LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
<LI><a href="#[2198bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_psn
<LI><a href="#[2198c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_free_page
<LI><a href="#[2198c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_psn
</UL>
<BR>[Called By]<UL><LI><a href="#[219763c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
</UL>

<P><STRONG><a name="[219763c]"></a>ftl_write</STRONG> (ARM, 160 bytes, Stack size 24 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = ftl_write &rArr; ftl_write_sector &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2197678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[219925c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[2197600]"></a>ftl_isr</STRONG> (ARM, 248 bytes, Stack size 8 bytes, ftl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21991a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_handler
</UL>

<P><STRONG><a name="[2196d18]"></a>ata_identify_device</STRONG> (ARM, 276 bytes, Stack size 8 bytes, sata_identify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ata_identify_device &rArr; set_string_data
</UL>
<BR>[Calls]<UL><LI><a href="#[2196c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pio_sector_transfer
<LI><a href="#[2196e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_string_data
<LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[21968e0]"></a>ata_check_power_mode</STRONG> (ARM, 88 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[21968a4]"></a>send_status_to_host</STRONG> (ARM, 116 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21964a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_not_supported
<LI><a href="#[21964e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_recalibrate
<LI><a href="#[2196520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_initialize_device_parameters
<LI><a href="#[219655c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_nop
<LI><a href="#[21965d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_sleep
<LI><a href="#[2196610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_idle_immediate
<LI><a href="#[219664c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_idle
<LI><a href="#[2196688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_standby_immediate
<LI><a href="#[21966c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_standby
<LI><a href="#[2196778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_set_multiple_mode
<LI><a href="#[21967b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_seek
<LI><a href="#[21967f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_set_features
<LI><a href="#[219682c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_read_verify_sectors
<LI><a href="#[2196868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_flush_cache
<LI><a href="#[2196c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pio_sector_transfer
<LI><a href="#[2199220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fiq_handler
</UL>

<P><STRONG><a name="[2196868]"></a>ata_flush_cache</STRONG> (ARM, 20 bytes, Stack size 8 bytes, sata_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = ata_flush_cache &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
<LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[219682c]"></a>ata_read_verify_sectors</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[21967f0]"></a>ata_set_features</STRONG> (ARM, 140 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[21967b4]"></a>ata_seek</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2196778]"></a>ata_set_multiple_mode</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2196c64]"></a>pio_sector_transfer</STRONG> (ARM, 208 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Called By]<UL><LI><a href="#[2196700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_write_buffer
<LI><a href="#[219673c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_read_buffer
<LI><a href="#[2196d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_identify_device
</UL>

<P><STRONG><a name="[219673c]"></a>ata_read_buffer</STRONG> (ARM, 12 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2196c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pio_sector_transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2196700]"></a>ata_write_buffer</STRONG> (ARM, 12 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2196c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pio_sector_transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[21966c4]"></a>ata_standby</STRONG> (ARM, 20 bytes, Stack size 8 bytes, sata_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = ata_standby &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
<LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2196688]"></a>ata_standby_immediate</STRONG> (ARM, 20 bytes, Stack size 8 bytes, sata_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = ata_standby_immediate &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
<LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[219664c]"></a>ata_idle</STRONG> (ARM, 20 bytes, Stack size 8 bytes, sata_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = ata_idle &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
<LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2196610]"></a>ata_idle_immediate</STRONG> (ARM, 20 bytes, Stack size 8 bytes, sata_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = ata_idle_immediate &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
<LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[21965d4]"></a>ata_sleep</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2196598]"></a>ata_read_native_max_address</STRONG> (ARM, 148 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[219655c]"></a>ata_nop</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2196520]"></a>ata_initialize_device_parameters</STRONG> (ARM, 92 bytes, Stack size 8 bytes, sata_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = ata_initialize_device_parameters
</UL>
<BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[21964e4]"></a>ata_recalibrate</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[21964a8]"></a>ata_not_supported</STRONG> (ARM, 8 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_main.o(.text)
</UL>
<P><STRONG><a name="[219646c]"></a>ata_srst</STRONG> (ARM, 100 bytes, Stack size 16 bytes, sata_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ata_srst
</UL>
<BR>[Calls]<UL><LI><a href="#[21963f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2196430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_execute_drive_diagnostics
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2196430]"></a>ata_execute_drive_diagnostics</STRONG> (ARM, 12 bytes, Stack size 0 bytes, sata_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ata_execute_drive_diagnostics &rArr; ata_srst
</UL>
<BR>[Calls]<UL><LI><a href="#[219646c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_srst
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sata_table.o(.constdata)
</UL>
<P><STRONG><a name="[2199220]"></a>fiq_handler</STRONG> (ARM, 1080 bytes, Stack size 56 bytes, sata_isr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2195ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_blink
<LI><a href="#[21968a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_status_to_host
</UL>

<P><STRONG><a name="[219925c]"></a>Main</STRONG> (ARM, 172 bytes, Stack size 24 bytes, sata_main.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = Main &rArr; ftl_write &rArr; ftl_write_sector &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2195c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eventq_get
<LI><a href="#[21974d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_search_equ
<LI><a href="#[219763c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[21976b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
</UL>
<BR>[Called By]<UL><LI><a href="#[219970c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handler
</UL>

<P><STRONG><a name="[21963f4]"></a>delay</STRONG> (ARM, 28 bytes, Stack size 0 bytes, sata_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21958b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sata_reset
<LI><a href="#[2195ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_blink
<LI><a href="#[219646c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_srst
<LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
</UL>

<P><STRONG><a name="[21958b4]"></a>sata_reset</STRONG> (ARM, 272 bytes, Stack size 8 bytes, sata_main.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = sata_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[2195878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_sram
<LI><a href="#[21963f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[2199658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_interrupt
<LI><a href="#[2199694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
</UL>

<P><STRONG><a name="[2197510]"></a>_mem_copy</STRONG> (ARM, 72 bytes, Stack size 0 bytes, mem_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2194d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_clr_bit_dram
<LI><a href="#[2194d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_set_bit_dram
<LI><a href="#[2194db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_write_dram_8
<LI><a href="#[2196d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_identify_device
<LI><a href="#[21973a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_write_dram_32
<LI><a href="#[21973e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_write_dram_16
<LI><a href="#[2197678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_sector
<LI><a href="#[21976f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_sector
<LI><a href="#[2198b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logging_misc_meta
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2194e64]"></a>_mem_bmp_find_sram</STRONG> (ARM, 72 bytes, Stack size 0 bytes, mem_util.o(.text), UNUSED)

<P><STRONG><a name="[2194e28]"></a>_mem_bmp_find_dram</STRONG> (ARM, 72 bytes, Stack size 0 bytes, mem_util.o(.text), UNUSED)

<P><STRONG><a name="[2195878]"></a>_mem_set_sram</STRONG> (ARM, 68 bytes, Stack size 0 bytes, mem_util.o(.text), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[21934d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_nand_blocks
<LI><a href="#[21958b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sata_reset
<LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
</UL>

<P><STRONG><a name="[2197498]"></a>_mem_set_dram</STRONG> (ARM, 68 bytes, Stack size 0 bytes, mem_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21934d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_nand_blocks
<LI><a href="#[21976f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_sector
<LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
<LI><a href="#[2198b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_format_mark
<LI><a href="#[2198cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_smt_piece
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
<LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
</UL>

<P><STRONG><a name="[2194dec]"></a>_mem_search_min_max</STRONG> (ARM, 56 bytes, Stack size 0 bytes, mem_util.o(.text), UNUSED)

<P><STRONG><a name="[21974d4]"></a>_mem_search_equ</STRONG> (ARM, 84 bytes, Stack size 4 bytes, mem_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _mem_search_equ
</UL>
<BR>[Called By]<UL><LI><a href="#[2198c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_bad_block
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
<LI><a href="#[219925c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[21973a8]"></a>_write_dram_32</STRONG> (ARM, 36 bytes, Stack size 12 bytes, mem_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _write_dram_32
</UL>
<BR>[Calls]<UL><LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2198c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_psn
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[21973e4]"></a>_write_dram_16</STRONG> (ARM, 80 bytes, Stack size 8 bytes, mem_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _write_dram_16
</UL>
<BR>[Calls]<UL><LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2194db0]"></a>_write_dram_8</STRONG> (ARM, 80 bytes, Stack size 8 bytes, mem_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
</UL>

<P><STRONG><a name="[2194d74]"></a>_set_bit_dram</STRONG> (ARM, 84 bytes, Stack size 8 bytes, mem_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
</UL>

<P><STRONG><a name="[2194d38]"></a>_clr_bit_dram</STRONG> (ARM, 84 bytes, Stack size 8 bytes, mem_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
</UL>

<P><STRONG><a name="[2194cfc]"></a>_tst_bit_dram</STRONG> (ARM, 56 bytes, Stack size 0 bytes, mem_util.o(.text), UNUSED)

<P><STRONG><a name="[2194cc0]"></a>_read_dram_8</STRONG> (ARM, 52 bytes, Stack size 0 bytes, mem_util.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2194c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_cmp_dram
</UL>

<P><STRONG><a name="[219745c]"></a>_read_dram_16</STRONG> (ARM, 56 bytes, Stack size 0 bytes, mem_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2197420]"></a>_read_dram_32</STRONG> (ARM, 32 bytes, Stack size 0 bytes, mem_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2198bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_psn
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2194c84]"></a>_mem_cmp_sram</STRONG> (ARM, 68 bytes, Stack size 4 bytes, mem_util.o(.text), UNUSED)

<P><STRONG><a name="[2194c48]"></a>_mem_cmp_dram</STRONG> (ARM, 100 bytes, Stack size 16 bytes, mem_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2194cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_dram_8
</UL>

<P><STRONG><a name="[21972b8]"></a>flash_issue_cmd</STRONG> (ARM, 84 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2193f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_block_erase_sync
<LI><a href="#[2193f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_modified_copyback
<LI><a href="#[2193fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_ptprogram_from_host
<LI><a href="#[2193fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_program_from_host
<LI><a href="#[2194018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_program
<LI><a href="#[2194054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_ptread_to_host
<LI><a href="#[2194090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_read_to_host
<LI><a href="#[21940cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_ptread
<LI><a href="#[2194108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_read
<LI><a href="#[21944c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_reset
<LI><a href="#[21971c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_ptprogram
<LI><a href="#[2197204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_copyback
<LI><a href="#[2197240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_block_erase
<LI><a href="#[2197678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_sector
<LI><a href="#[21976f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_sector
<LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
<LI><a href="#[21977a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_merge_buffer
<LI><a href="#[2198cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_smt_piece
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
<LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
</UL>

<P><STRONG><a name="[219457c]"></a>flash_copy</STRONG> (ARM, 100 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[2194540]"></a>flash_modify_copy</STRONG> (ARM, 124 bytes, Stack size 20 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[2194504]"></a>flash_erase</STRONG> (ARM, 88 bytes, Stack size 4 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[21972f4]"></a>flash_finish</STRONG> (ARM, 20 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
<LI><a href="#[2198b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logging_misc_meta
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2197330]"></a>flash_clear_irq</STRONG> (ARM, 44 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21934d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_nand_blocks
<LI><a href="#[21944c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_reset
<LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
<LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
</UL>

<P><STRONG><a name="[21944c8]"></a>flash_reset</STRONG> (ARM, 260 bytes, Stack size 20 bytes, flash.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = flash_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
<LI><a href="#[2197330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clear_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
</UL>

<P><STRONG><a name="[2194108]"></a>nand_page_read</STRONG> (ARM, 80 bytes, Stack size 0 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[21940cc]"></a>nand_page_ptread</STRONG> (ARM, 96 bytes, Stack size 16 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[2194090]"></a>nand_page_read_to_host</STRONG> (ARM, 148 bytes, Stack size 16 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[2194054]"></a>nand_page_ptread_to_host</STRONG> (ARM, 148 bytes, Stack size 16 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[2194018]"></a>nand_page_program</STRONG> (ARM, 80 bytes, Stack size 0 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[21971c8]"></a>nand_page_ptprogram</STRONG> (ARM, 92 bytes, Stack size 8 bytes, flash_wrapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nand_page_ptprogram
</UL>
<BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2198b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logging_misc_meta
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2193fdc]"></a>nand_page_program_from_host</STRONG> (ARM, 128 bytes, Stack size 8 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[2193fa0]"></a>nand_page_ptprogram_from_host</STRONG> (ARM, 128 bytes, Stack size 16 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[2197204]"></a>nand_page_copyback</STRONG> (ARM, 96 bytes, Stack size 8 bytes, flash_wrapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nand_page_copyback
</UL>
<BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2193f64]"></a>nand_page_modified_copyback</STRONG> (ARM, 280 bytes, Stack size 40 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[2197240]"></a>nand_block_erase</STRONG> (ARM, 72 bytes, Stack size 8 bytes, flash_wrapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nand_block_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2198b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logging_misc_meta
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2193f28]"></a>nand_block_erase_sync</STRONG> (ARM, 72 bytes, Stack size 8 bytes, flash_wrapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
</UL>

<P><STRONG><a name="[21991e4]"></a>init_jasmine</STRONG> (ARM, 420 bytes, Stack size 40 bytes, initialize.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = init_jasmine &rArr; ftl_open &rArr; format &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21944c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_reset
<LI><a href="#[2195878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_sram
<LI><a href="#[21958b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sata_reset
<LI><a href="#[21963f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
<LI><a href="#[2197330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clear_irq
<LI><a href="#[2197498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_dram
<LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
</UL>
<BR>[Called By]<UL><LI><a href="#[219970c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handler
</UL>

<P><STRONG><a name="[219727c]"></a>led</STRONG> (ARM, 28 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2195ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_blink
<LI><a href="#[2198b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;format
<LI><a href="#[2198c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_free_page
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2195ff8]"></a>led_blink</STRONG> (ARM, 44 bytes, Stack size 8 bytes, misc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21963f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[219727c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led
</UL>
<BR>[Called By]<UL><LI><a href="#[21991a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_handler
<LI><a href="#[2199220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fiq_handler
</UL>

<P><STRONG><a name="[2193514]"></a>swi_handler</STRONG> (ARM, 4 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[21991a8]"></a>irq_handler</STRONG> (ARM, 172 bytes, Stack size 24 bytes, misc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2195ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_blink
<LI><a href="#[2197600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_isr
</UL>

<P><STRONG><a name="[21934d8]"></a>test_nand_blocks</STRONG> (ARM, 736 bytes, Stack size 40 bytes, misc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2192bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
<LI><a href="#[2192c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand (via Veneer)
<LI><a href="#[2195878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_sram
<LI><a href="#[2197330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clear_irq
<LI><a href="#[2197498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_dram
</UL>

<P><STRONG><a name="[219349c]"></a>start_interval_measurement</STRONG> (ARM, 44 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[2193460]"></a>start_timer</STRONG> (ARM, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[2192c68]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2192c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
<LI><a href="#[21934d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_nand_blocks (via Veneer)
</UL>

<P><STRONG><a name="[2192c2c]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2192c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>

<P><STRONG><a name="[2192bf0]"></a>rand</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, rand.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21934d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_nand_blocks (via Veneer)
</UL>

<P><STRONG><a name="[2192998]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[219295c]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[2192920]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)

<P><STRONG><a name="[21928e4]"></a>__aeabi_uidivmod</STRONG> (ARM, 28 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[21929d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[2192a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div4
<LI><a href="#[2192a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[2193fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_ptprogram_from_host
<LI><a href="#[2193fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_program_from_host
<LI><a href="#[2194054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_ptread_to_host
<LI><a href="#[2194090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_read_to_host
<LI><a href="#[2196520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_initialize_device_parameters
<LI><a href="#[219763c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[21976b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
<LI><a href="#[21976f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_sector
<LI><a href="#[2198bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_psn
<LI><a href="#[2198c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_psn
<LI><a href="#[2198cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_smt_piece
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[219970c]"></a>reset_handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, init.o(init), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = reset_handler &rArr; init_jasmine &rArr; ftl_open &rArr; format &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21991e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_jasmine
<LI><a href="#[219925c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[2198d34]"></a>flush_smt_piece</STRONG> (ARM, 416 bytes, Stack size 48 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21971c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_ptprogram
<LI><a href="#[2197204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_copyback
<LI><a href="#[2197240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_block_erase
<LI><a href="#[219727c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led
<LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
<LI><a href="#[21972f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_finish
<LI><a href="#[2197330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clear_irq
<LI><a href="#[21973a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_write_dram_32
<LI><a href="#[21973e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_write_dram_16
<LI><a href="#[2197420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_dram_32
<LI><a href="#[219745c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_dram_16
<LI><a href="#[2197498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_dram
<LI><a href="#[21974d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_search_equ
<LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>
<BR>[Called By]<UL><LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
<LI><a href="#[2198cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_smt_piece
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>

<P><STRONG><a name="[2198cf8]"></a>load_smt_piece</STRONG> (ARM, 384 bytes, Stack size 32 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21972b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_issue_cmd
<LI><a href="#[2197498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_dram
<LI><a href="#[2198d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_smt_piece
</UL>
<BR>[Called By]<UL><LI><a href="#[2198bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_psn
<LI><a href="#[2198c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_psn
</UL>

<P><STRONG><a name="[2198cbc]"></a>init_meta_data</STRONG> (ARM, 296 bytes, Stack size 20 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = init_meta_data
</UL>
<BR>[Called By]<UL><LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
<LI><a href="#[2198b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;format
</UL>

<P><STRONG><a name="[2198c80]"></a>set_psn</STRONG> (ARM, 184 bytes, Stack size 32 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21973a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_write_dram_32
<LI><a href="#[2198cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_smt_piece
</UL>
<BR>[Called By]<UL><LI><a href="#[2197678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_sector
<LI><a href="#[21977a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_merge_buffer
</UL>

<P><STRONG><a name="[2198c44]"></a>is_bad_block</STRONG> (ARM, 132 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = is_bad_block &rArr; _mem_search_equ
</UL>
<BR>[Calls]<UL><LI><a href="#[21974d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_search_equ
</UL>
<BR>[Called By]<UL><LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
<LI><a href="#[2198b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;format
<LI><a href="#[2198c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_free_page
</UL>

<P><STRONG><a name="[2198c08]"></a>get_free_page</STRONG> (ARM, 120 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = get_free_page &rArr; is_bad_block &rArr; _mem_search_equ
</UL>
<BR>[Calls]<UL><LI><a href="#[219727c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led
<LI><a href="#[2198c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_bad_block
</UL>
<BR>[Called By]<UL><LI><a href="#[2197678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_sector
<LI><a href="#[21977a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flush_merge_buffer
</UL>

<P><STRONG><a name="[2198bcc]"></a>get_psn</STRONG> (ARM, 128 bytes, Stack size 16 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = get_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[2197420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_dram_32
<LI><a href="#[2198cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_smt_piece
</UL>
<BR>[Called By]<UL><LI><a href="#[2197678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_sector
<LI><a href="#[21976f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_sector
</UL>

<P><STRONG><a name="[2198b90]"></a>logging_misc_meta</STRONG> (ARM, 148 bytes, Stack size 32 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = logging_misc_meta &rArr; nand_page_ptprogram
</UL>
<BR>[Calls]<UL><LI><a href="#[21971c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_page_ptprogram
<LI><a href="#[2197240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nand_block_erase
<LI><a href="#[21972f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_finish
<LI><a href="#[2197510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
</UL>

<P><STRONG><a name="[2198b54]"></a>format</STRONG> (ARM, 168 bytes, Stack size 40 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = format &rArr; ftl_flush &rArr; flush_merge_buffer &rArr; set_psn &rArr; load_smt_piece &rArr; flush_smt_piece &rArr;  flush_smt_piece (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219727c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led
<LI><a href="#[2197768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_flush
<LI><a href="#[2198b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_format_mark
<LI><a href="#[2198c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_bad_block
<LI><a href="#[2198cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_meta_data
</UL>
<BR>[Called By]<UL><LI><a href="#[219772c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_open
</UL>

<P><STRONG><a name="[2198b18]"></a>write_format_mark</STRONG> (ARM, 164 bytes, Stack size 16 bytes, ftl.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = write_format_mark
</UL>
<BR>[Calls]<UL><LI><a href="#[2197498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_mem_set_dram
</UL>
<BR>[Called By]<UL><LI><a href="#[2198b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;format
</UL>

<P><STRONG><a name="[2196e80]"></a>set_string_data</STRONG> (ARM, 108 bytes, Stack size 12 bytes, sata_identify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_string_data
</UL>
<BR>[Called By]<UL><LI><a href="#[2196d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ata_identify_device
</UL>

<P><STRONG><a name="[2195c38]"></a>eventq_get</STRONG> (ARM, 148 bytes, Stack size 0 bytes, sata_main.o(.text), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[219925c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[2192a4c]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[2192a10]"></a>__arm_div4</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[21929d4]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21928e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
